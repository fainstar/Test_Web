"""
應用程式工廠模組
使用工廠模式創建Flask應用程式實例
"""
from flask import Flask
from config.config import get_config
import os

def create_app(config_name=None):
    """
    應用程式工廠函數
    
    Args:
        config_name: 配置名稱 ('development', 'production', 'testing')
    
    Returns:
        Flask: 配置好的Flask應用程式實例
    """
    app = Flask(__name__, 
                template_folder='../templates',
                static_folder='../static')
    
    # 載入配置
    if config_name is None:
        config_name = os.environ.get('FLASK_ENV', 'development')
    
    config_class = get_config()
    app.config.from_object(config_class)
    
    # 初始化配置並確保數據庫路徑存在
    config_class.init_app(app)
    
    # 確保數據庫目錄存在（額外保障）
    from pathlib import Path
    db_path = Path(app.config['DATABASE_PATH'])
    if db_path.parent != Path('.'):
        db_path.parent.mkdir(parents=True, exist_ok=True)
    
    # 註冊藍圖
    register_blueprints(app)
    
    # 初始化擴展
    init_extensions(app)
    
    # 註冊錯誤處理器
    register_error_handlers(app)
    
    # 註冊上下文處理器
    register_context_processors(app)
    
    return app

def register_blueprints(app):
    """註冊所有藍圖"""
    from app.routes.main import main_bp
    from app.routes.quiz import quiz_bp
    from app.routes.admin import admin_bp
    from app.routes.api import api_bp
    
    app.register_blueprint(main_bp)
    app.register_blueprint(quiz_bp, url_prefix='/quiz')
    app.register_blueprint(admin_bp, url_prefix='/admin')
    app.register_blueprint(api_bp, url_prefix='/api')

def init_extensions(app):
    """初始化Flask擴展"""
    # 初始化CSRF保護，但排除API路由
    from flask_wtf.csrf import CSRFProtect, CSRFError
    csrf = CSRFProtect()
    
    # 自定義CSRF配置 - 排除API路由
    @app.before_request
    def check_csrf():
        from flask import request
        if request.endpoint and request.endpoint.startswith('api.'):
            # 跳過API路由的CSRF驗證
            return None
    
    # 初始化CSRF
    csrf.init_app(app)
    
    # 註冊CSRF錯誤處理器
    @app.errorhandler(CSRFError)
    def handle_csrf_error(e):
        from flask import request, redirect, url_for, flash, jsonify
        if request.is_json:
            return jsonify({
                'success': False,
                'error': 'CSRF驗證失敗',
                'error_code': 400
            }), 400
        else:
            flash('安全驗證失敗，請重新嘗試', 'warning')
            # 如果是測驗相關的CSRF錯誤，重定向到開始頁面
            if '/quiz/' in request.path:
                return redirect(url_for('quiz.start_quiz'))
            else:
                return redirect(url_for('main.index'))

def register_error_handlers(app):
    """註冊錯誤處理器"""
    from app.utils.error_handlers import register_error_handlers as reg_handlers
    reg_handlers(app)

def register_context_processors(app):
    """註冊上下文處理器"""
    from app.utils.context_processors import register_context_processors as reg_processors
    reg_processors(app)
